/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef APPLICATIONPAGEVIEWBASE_HPP
#define APPLICATIONPAGEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/applicationpage_screen/ApplicationPagePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class ApplicationPageViewBase : public touchgfx::View<ApplicationPagePresenter>
{
public:
    ApplicationPageViewBase();
    virtual ~ApplicationPageViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void turnMotor()
    {
        // Override and implement this function in ApplicationPage
    }
    virtual void openModalHeartRate()
    {
        // Override and implement this function in ApplicationPage
    }
    virtual void closedModalHeartRate()
    {
        // Override and implement this function in ApplicationPage
    }
    virtual void beginHeartRate()
    {
        // Override and implement this function in ApplicationPage
    }
    virtual void connectWiFi()
    {
        // Override and implement this function in ApplicationPage
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image AppBackground;
    touchgfx::Button WirelessConnection;
    touchgfx::Image image3;
    touchgfx::Image image2;
    touchgfx::Image image1;
    touchgfx::ToggleButton SettingButton;
    touchgfx::ToggleButton SixAxisButton;
    touchgfx::ToggleButton FiveKeyButton;
    touchgfx::ToggleButton Back2HomeButton;
    touchgfx::ToggleButton openMotor;
    touchgfx::Image flameMonitor;
    touchgfx::TextAreaWithOneWildcard textCurrent;
    touchgfx::TextAreaWithOneWildcard textVoltage;
    touchgfx::Button jumpHeartRate;
    touchgfx::TextAreaWithOneWildcard textALS;
    touchgfx::ModalWindow modalHeartRate;
    touchgfx::Button measureHeartRate;
    touchgfx::TextAreaWithOneWildcard textPulse;
    touchgfx::TextAreaWithOneWildcard textSPOZ;
    touchgfx::TextArea textInfo;
    touchgfx::Button closedHeartRateModal;
    touchgfx::ModalWindow WiFiModalLink;
    touchgfx::Button ConnectWiFi;
    touchgfx::Button CloseWiFiModal;
    touchgfx::TextAreaWithOneWildcard textWiFiLinkInfo;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTCURRENT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textCurrentBuffer[TEXTCURRENT_SIZE];
    static const uint16_t TEXTVOLTAGE_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textVoltageBuffer[TEXTVOLTAGE_SIZE];
    static const uint16_t TEXTALS_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textALSBuffer[TEXTALS_SIZE];
    static const uint16_t TEXTPULSE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textPulseBuffer[TEXTPULSE_SIZE];
    static const uint16_t TEXTSPOZ_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textSPOZBuffer[TEXTSPOZ_SIZE];
    static const uint16_t TEXTWIFILINKINFO_SIZE = 200;
    touchgfx::Unicode::UnicodeChar textWiFiLinkInfoBuffer[TEXTWIFILINKINFO_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ApplicationPageViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // APPLICATIONPAGEVIEWBASE_HPP
