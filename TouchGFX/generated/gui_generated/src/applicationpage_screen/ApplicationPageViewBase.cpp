/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/applicationpage_screen/ApplicationPageViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ApplicationPageViewBase::ApplicationPageViewBase() :
    buttonCallback(this, &ApplicationPageViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    AppBackground.setXY(0, 0);
    AppBackground.setBitmap(touchgfx::Bitmap(BITMAP_APPLICATIONPAGEBACKGROUND_ID));
    add(AppBackground);

    WirelessConnection.setXY(179, 9);
    WirelessConnection.setBitmaps(touchgfx::Bitmap(BITMAP_WIFI_IMG_ID), touchgfx::Bitmap(BITMAP_WIFI_IMG_CLICK_ID));
    WirelessConnection.setAction(buttonCallback);
    add(WirelessConnection);

    image3.setXY(6, 93);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_LUX_IMG_ID));
    add(image3);

    image2.setXY(93, 6);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_VOLTAGE_IMG_ID));
    add(image2);

    image1.setXY(6, 5);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CURRENT_IMG_ID));
    add(image1);

    SettingButton.setXY(261, 9);
    SettingButton.setBitmaps(touchgfx::Bitmap(BITMAP_SETTING_BUTTON_ID), touchgfx::Bitmap(BITMAP_SETTING_BUTTON_CLICK_ID));
    SettingButton.setAction(buttonCallback);
    add(SettingButton);

    SixAxisButton.setXY(93, 186);
    SixAxisButton.setBitmaps(touchgfx::Bitmap(BITMAP_SIX_AXIS_ID), touchgfx::Bitmap(BITMAP_SIX_AXIS_CLICK_ID));
    SixAxisButton.setAction(buttonCallback);
    add(SixAxisButton);

    FiveKeyButton.setXY(179, 93);
    FiveKeyButton.setBitmaps(touchgfx::Bitmap(BITMAP_FIVE_KEY_ID), touchgfx::Bitmap(BITMAP_FIVE_KEY_CLICK_ID));
    FiveKeyButton.setAction(buttonCallback);
    add(FiveKeyButton);

    Back2HomeButton.setXY(261, 186);
    Back2HomeButton.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHT_PAGE_ID), touchgfx::Bitmap(BITMAP_RIGHT_PAGE_CLICK_ID));
    Back2HomeButton.setAction(buttonCallback);
    add(Back2HomeButton);

    openMotor.setXY(93, 93);
    openMotor.setBitmaps(touchgfx::Bitmap(BITMAP_VIBRATE_BUTTON_ID), touchgfx::Bitmap(BITMAP_VIBRATE_BUTTON_CLICK_ID));
    openMotor.setAction(buttonCallback);
    add(openMotor);

    flameMonitor.setXY(6, 186);
    flameMonitor.setBitmap(touchgfx::Bitmap(BITMAP_FLAME_NO_FIRE_54X54_ID));
    add(flameMonitor);

    textCurrent.setXY(3, 65);
    textCurrent.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textCurrent.setLinespacing(0);
    Unicode::snprintf(textCurrentBuffer, TEXTCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GCSD).getText());
    textCurrent.setWildcard(textCurrentBuffer);
    textCurrent.resizeToCurrentText();
    textCurrent.setTypedText(touchgfx::TypedText(T_EXTCURRENT));
    add(textCurrent);

    textVoltage.setXY(90, 65);
    textVoltage.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textVoltage.setLinespacing(0);
    Unicode::snprintf(textVoltageBuffer, TEXTVOLTAGE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z8QM).getText());
    textVoltage.setWildcard(textVoltageBuffer);
    textVoltage.resizeToCurrentText();
    textVoltage.setTypedText(touchgfx::TypedText(T_EXTVOLTAGE));
    add(textVoltage);

    jumpHeartRate.setXY(261, 93);
    jumpHeartRate.setBitmaps(touchgfx::Bitmap(BITMAP_HEARTRATE_54X55_ID), touchgfx::Bitmap(BITMAP_HEARTRATE_PRESSED__54X55_ID));
    jumpHeartRate.setAction(buttonCallback);
    add(jumpHeartRate);

    textALS.setXY(2, 149);
    textALS.setColor(touchgfx::Color::getColorFromRGB(255, 247, 247));
    textALS.setLinespacing(0);
    Unicode::snprintf(textALSBuffer, TEXTALS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JHQ3).getText());
    textALS.setWildcard(textALSBuffer);
    textALS.resizeToCurrentText();
    textALS.setTypedText(touchgfx::TypedText(T_EXTLIGHT));
    add(textALS);

    modalHeartRate.setBackground(touchgfx::BitmapId(BITMAP_MODALHEARTRATE_BACKGROUND_ID), 19, 20);
    modalHeartRate.setShadeColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    modalHeartRate.setShadeAlpha(150);
    modalHeartRate.hide();
    measureHeartRate.setXY(193, 113);
    measureHeartRate.setBitmaps(touchgfx::Bitmap(BITMAP_HEARTRATE_START_80X80_ID), touchgfx::Bitmap(BITMAP_HEARTRATE_END_80X80_ID));
    measureHeartRate.setAction(buttonCallback);
    modalHeartRate.add(measureHeartRate);

    textPulse.setXY(51, 62);
    textPulse.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textPulse.setLinespacing(0);
    Unicode::snprintf(textPulseBuffer, TEXTPULSE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XI1E).getText());
    textPulse.setWildcard(textPulseBuffer);
    textPulse.resizeToCurrentText();
    textPulse.setTypedText(touchgfx::TypedText(T_EXTPULSE));
    modalHeartRate.add(textPulse);

    textSPOZ.setXY(224, 62);
    textSPOZ.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textSPOZ.setLinespacing(0);
    Unicode::snprintf(textSPOZBuffer, TEXTSPOZ_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DJZG).getText());
    textSPOZ.setWildcard(textSPOZBuffer);
    textSPOZ.resizeToCurrentText();
    textSPOZ.setTypedText(touchgfx::TypedText(T_EXTSPOZ));
    modalHeartRate.add(textSPOZ);

    textInfo.setXY(51, 100);
    textInfo.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textInfo.setLinespacing(0);
    textInfo.setTypedText(touchgfx::TypedText(T_TEXTINFO1));
    modalHeartRate.add(textInfo);

    closedHeartRateModal.setXY(5, 6);
    closedHeartRateModal.setBitmaps(touchgfx::Bitmap(BITMAP_CLOSEDMODALWIFI_36X36_ID), touchgfx::Bitmap(BITMAP_CLOSEDMODALWIFI_PRESSED_36X36_ID));
    closedHeartRateModal.setAction(buttonCallback);
    modalHeartRate.add(closedHeartRateModal);

    add(modalHeartRate);

    WiFiModalLink.setBackground(touchgfx::BitmapId(BITMAP_MODALWIFI_BACKGROUND_ID), 19, 20);
    WiFiModalLink.setShadeColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    WiFiModalLink.setShadeAlpha(150);
    WiFiModalLink.hide();
    ConnectWiFi.setXY(229, 3);
    ConnectWiFi.setBitmaps(touchgfx::Bitmap(BITMAP_WIFILINK_36X49_ID), touchgfx::Bitmap(BITMAP_WIFILINK_36X49_PRESSED_ID));
    ConnectWiFi.setAction(buttonCallback);
    WiFiModalLink.add(ConnectWiFi);

    CloseWiFiModal.setXY(9, 3);
    CloseWiFiModal.setBitmaps(touchgfx::Bitmap(BITMAP_CLOSEDMODALWIFI_36X36_ID), touchgfx::Bitmap(BITMAP_CLOSEDMODALWIFI_PRESSED_36X36_ID));
    CloseWiFiModal.setAction(buttonCallback);
    WiFiModalLink.add(CloseWiFiModal);

    textWiFiLinkInfo.setPosition(6, 49, 268, 144);
    textWiFiLinkInfo.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textWiFiLinkInfo.setLinespacing(0);
    Unicode::snprintf(textWiFiLinkInfoBuffer, TEXTWIFILINKINFO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2ZHZ).getText());
    textWiFiLinkInfo.setWildcard(textWiFiLinkInfoBuffer);
    textWiFiLinkInfo.setTypedText(touchgfx::TypedText(T_WIFILINKINFO));
    WiFiModalLink.add(textWiFiLinkInfo);

    add(WiFiModalLink);
}

ApplicationPageViewBase::~ApplicationPageViewBase()
{

}

void ApplicationPageViewBase::setupScreen()
{

}

void ApplicationPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Back2HomeButton)
    {
        //Back2HomePage
        //When Back2HomeButton clicked change screen to HomePage
        //Go to HomePage with no screen transition
        application().gotoHomePageScreenNoTransition();
    }
    if (&src == &openMotor)
    {
        //turnMotor
        //When openMotor clicked call virtual function
        //Call turnMotor
        turnMotor();
    }
    if (&src == &jumpHeartRate)
    {
        //openModalHeartRate
        //When jumpHeartRate clicked call virtual function
        //Call openModalHeartRate
        openModalHeartRate();
    }
    if (&src == &closedHeartRateModal)
    {
        //closedModalHeartRate
        //When closedHeartRateModal clicked call virtual function
        //Call closedModalHeartRate
        closedModalHeartRate();
    }
    if (&src == &measureHeartRate)
    {
        //beginHeartRate
        //When measureHeartRate clicked call virtual function
        //Call beginHeartRate
        beginHeartRate();
    }
    if (&src == &FiveKeyButton)
    {
        //FiveKeyObserve
        //When FiveKeyButton clicked change screen to FiveKeyPage
        //Go to FiveKeyPage with no screen transition
        application().gotoFiveKeyPageScreenNoTransition();
    }
    if (&src == &WirelessConnection)
    {
        //OpenWifiModeLink
        //When WirelessConnection clicked show WiFiModalLink
        //Show WiFiModalLink
        WiFiModalLink.setVisible(true);
        WiFiModalLink.invalidate();
    }
    if (&src == &CloseWiFiModal)
    {
        //CloseWifiModeLink
        //When CloseWiFiModal clicked hide WiFiModalLink
        //Hide WiFiModalLink
        WiFiModalLink.setVisible(false);
        WiFiModalLink.invalidate();
    }
    if (&src == &SixAxisButton)
    {
        //SixAxisObserve
        //When SixAxisButton clicked change screen to SixAxisPage
        //Go to SixAxisPage with no screen transition
        application().gotoSixAxisPageScreenNoTransition();
    }
    if (&src == &ConnectWiFi)
    {
        //connectWiFi
        //When ConnectWiFi clicked call virtual function
        //Call connectWiFi
        connectWiFi();
    }
    if (&src == &SettingButton)
    {
        //SettingMode
        //When SettingButton clicked change screen to SettingPage
        //Go to SettingPage with no screen transition
        application().gotoSettingPageScreenNoTransition();
    }
}
