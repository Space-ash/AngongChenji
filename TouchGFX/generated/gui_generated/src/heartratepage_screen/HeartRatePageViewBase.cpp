/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/heartratepage_screen/HeartRatePageViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HeartRatePageViewBase::HeartRatePageViewBase() :
    buttonCallback(this, &HeartRatePageViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    heartrate_background.setXY(0, 0);
    heartrate_background.setBitmap(touchgfx::Bitmap(BITMAP_HEARTRATE_PAGE_BACKGROUND_ID));
    add(heartrate_background);

    heartrate_page_measure.setXY(70, 30);
    heartrate_page_measure.setBitmaps(touchgfx::Bitmap(BITMAP_HEARTRATE_PAGE_ID), touchgfx::Bitmap(BITMAP_HEARTRATE_PAGE_CLICK_ID));
    heartrate_page_measure.setAction(buttonCallback);
    add(heartrate_page_measure);

    modalHeartRate.setBackground(touchgfx::BitmapId(BITMAP_MODALHEARTRATE_BACKGROUND_ID), 19, 20);
    modalHeartRate.setShadeColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    modalHeartRate.setShadeAlpha(150);
    modalHeartRate.hide();
    measureHeartRate.setXY(193, 113);
    measureHeartRate.setBitmaps(touchgfx::Bitmap(BITMAP_HEARTRATE_START_80X80_ID), touchgfx::Bitmap(BITMAP_HEARTRATE_END_80X80_ID));
    measureHeartRate.setAction(buttonCallback);
    modalHeartRate.add(measureHeartRate);

    textPulse.setXY(51, 62);
    textPulse.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textPulse.setLinespacing(0);
    Unicode::snprintf(textPulseBuffer, TEXTPULSE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QDV1).getText());
    textPulse.setWildcard(textPulseBuffer);
    textPulse.resizeToCurrentText();
    textPulse.setTypedText(touchgfx::TypedText(T_EXTPULSE));
    modalHeartRate.add(textPulse);

    textSPOZ.setXY(224, 62);
    textSPOZ.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textSPOZ.setLinespacing(0);
    Unicode::snprintf(textSPOZBuffer, TEXTSPOZ_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1NW0).getText());
    textSPOZ.setWildcard(textSPOZBuffer);
    textSPOZ.resizeToCurrentText();
    textSPOZ.setTypedText(touchgfx::TypedText(T_EXTSPOZ));
    modalHeartRate.add(textSPOZ);

    textInfo.setXY(51, 100);
    textInfo.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textInfo.setLinespacing(0);
    textInfo.setTypedText(touchgfx::TypedText(T_TEXTINFO1));
    modalHeartRate.add(textInfo);

    closedHeartRateModal.setXY(5, 6);
    closedHeartRateModal.setBitmaps(touchgfx::Bitmap(BITMAP_CLOSEDMODALWIFI_36X36_ID), touchgfx::Bitmap(BITMAP_CLOSEDMODALWIFI_PRESSED_36X36_ID));
    closedHeartRateModal.setAction(buttonCallback);
    modalHeartRate.add(closedHeartRateModal);

    add(modalHeartRate);

    Back2Home.setXY(0, 186);
    Back2Home.setBitmaps(touchgfx::Bitmap(BITMAP_LEFT_PAGE_ID), touchgfx::Bitmap(BITMAP_LEFT_PAGE_CLICK_ID));
    Back2Home.setAction(buttonCallback);
    add(Back2Home);

    toggleButton1.setXY(265, 186);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHT_PAGE_ID), touchgfx::Bitmap(BITMAP_RIGHT_PAGE_CLICK_ID));
    toggleButton1.setAction(buttonCallback);
    add(toggleButton1);
}

HeartRatePageViewBase::~HeartRatePageViewBase()
{

}

void HeartRatePageViewBase::setupScreen()
{

}

void HeartRatePageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &heartrate_page_measure)
    {
        //openModalHeartRate
        //When heartrate_page_measure clicked call virtual function
        //Call openModalHeartRate
        openModalHeartRate();
    }
    if (&src == &closedHeartRateModal)
    {
        //closedModalHeartRate
        //When closedHeartRateModal clicked call virtual function
        //Call closedModalHeartRate
        closedModalHeartRate();
    }
    if (&src == &measureHeartRate)
    {
        //beginHeartRate
        //When measureHeartRate clicked call virtual function
        //Call beginHeartRate
        beginHeartRate();
    }
    if (&src == &Back2Home)
    {
        //Interaction1
        //When Back2Home clicked change screen to HomePage
        //Go to HomePage with no screen transition
        application().gotoHomePageScreenNoTransition();
    }
    if (&src == &toggleButton1)
    {
        //Interaction2
        //When toggleButton1 clicked change screen to ApplicationPage
        //Go to ApplicationPage with no screen transition
        application().gotoApplicationPageScreenNoTransition();
    }
}
