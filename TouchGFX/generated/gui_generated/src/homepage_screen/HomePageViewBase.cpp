/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/homepage_screen/HomePageViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HomePageViewBase::HomePageViewBase() :
    buttonCallback(this, &HomePageViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    animatedImage1.setXY(0, 0);
    animatedImage1.setBitmaps(BITMAP_BACKGROUND_01_ID, BITMAP_BACKGROUND_05_ID);
    animatedImage1.setUpdateTicksInterval(15);
    animatedImage1.startAnimation(false, true, true);
    add(animatedImage1);

    image1.setXY(0, 159);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_FOLDIMG_ID));
    add(image1);

    image2.setXY(3, 179);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_TEMP_IMG_ID));
    add(image2);

    image3.setXY(6, 211);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_HUMIDITY_IMG_ID));
    add(image3);

    textTemp.setXY(31, 180);
    textTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textTemp.setLinespacing(0);
    Unicode::snprintf(textTempBuffer, TEXTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CZ3Z).getText());
    textTemp.setWildcard(textTempBuffer);
    textTemp.resizeToCurrentText();
    textTemp.setTypedText(touchgfx::TypedText(T_EXTTEMP));
    add(textTemp);

    textHumidity.setXY(31, 212);
    textHumidity.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textHumidity.setLinespacing(0);
    Unicode::snprintf(textHumidityBuffer, TEXTHUMIDITY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1NOT).getText());
    textHumidity.setWildcard(textHumidityBuffer);
    textHumidity.resizeToCurrentText();
    textHumidity.setTypedText(touchgfx::TypedText(T_EXTHUMIDITY));
    add(textHumidity);

    textSystemClock.setXY(3, 89);
    textSystemClock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textSystemClock.setLinespacing(0);
    touchgfx::Unicode::snprintf(textSystemClockBuffer1, TEXTSYSTEMCLOCKBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RWJA).getText());
    textSystemClock.setWildcard1(textSystemClockBuffer1);
    touchgfx::Unicode::snprintf(textSystemClockBuffer2, TEXTSYSTEMCLOCKBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KDU8).getText());
    textSystemClock.setWildcard2(textSystemClockBuffer2);
    textSystemClock.resizeToCurrentText();
    textSystemClock.setTypedText(touchgfx::TypedText(T_SYSTEMCLOCK));
    add(textSystemClock);

    textClockSecond.setXY(144, 110);
    textClockSecond.setColor(touchgfx::Color::getColorFromRGB(47, 241, 247));
    textClockSecond.setLinespacing(0);
    Unicode::snprintf(textClockSecondBuffer, TEXTCLOCKSECOND_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ADBO).getText());
    textClockSecond.setWildcard(textClockSecondBuffer);
    textClockSecond.resizeToCurrentText();
    textClockSecond.setTypedText(touchgfx::TypedText(T_CLOCKSECOND));
    add(textClockSecond);

    toggleButton5.setXY(265, 185);
    toggleButton5.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHT_PAGE_ID), touchgfx::Bitmap(BITMAP_RIGHT_PAGE_CLICK_ID));
    toggleButton5.setAction(buttonCallback);
    add(toggleButton5);

    toggleButton4.setXY(205, 186);
    toggleButton4.setBitmaps(touchgfx::Bitmap(BITMAP_LEFT_PAGE_ID), touchgfx::Bitmap(BITMAP_LEFT_PAGE_CLICK_ID));
    toggleButton4.setAction(buttonCallback);
    add(toggleButton4);

    textSystemYear.setXY(9, 13);
    textSystemYear.setColor(touchgfx::Color::getColorFromRGB(58, 230, 242));
    textSystemYear.setLinespacing(0);
    Unicode::snprintf(textSystemYearBuffer, TEXTSYSTEMYEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BGCO).getText());
    textSystemYear.setWildcard(textSystemYearBuffer);
    textSystemYear.resizeToCurrentText();
    textSystemYear.setTypedText(touchgfx::TypedText(T_SYSTEMYEAR));
    add(textSystemYear);

    textSystemDate.setXY(79, 13);
    textSystemDate.setColor(touchgfx::Color::getColorFromRGB(58, 230, 242));
    textSystemDate.setLinespacing(0);
    touchgfx::Unicode::snprintf(textSystemDateBuffer1, TEXTSYSTEMDATEBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_469A).getText());
    textSystemDate.setWildcard1(textSystemDateBuffer1);
    touchgfx::Unicode::snprintf(textSystemDateBuffer2, TEXTSYSTEMDATEBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DIBA).getText());
    textSystemDate.setWildcard2(textSystemDateBuffer2);
    textSystemDate.resizeToCurrentText();
    textSystemDate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X915));
    add(textSystemDate);

    textWeekDay.setPosition(10, 49, 51, 25);
    textWeekDay.setColor(touchgfx::Color::getColorFromRGB(191, 148, 255));
    textWeekDay.setLinespacing(0);
    Unicode::snprintf(textWeekDayBuffer, TEXTWEEKDAY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IBLE).getText());
    textWeekDay.setWildcard(textWeekDayBuffer);
    textWeekDay.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7EKT));
    add(textWeekDay);
}

HomePageViewBase::~HomePageViewBase()
{

}

void HomePageViewBase::setupScreen()
{

}

void HomePageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton4)
    {
        //Interaction4
        //When toggleButton4 clicked change screen to ApplicationPage
        //Go to ApplicationPage with no screen transition
        application().gotoApplicationPageScreenNoTransition();
    }
    if (&src == &toggleButton5)
    {
        //Interaction5
        //When toggleButton5 clicked change screen to HeartRatePage
        //Go to HeartRatePage with no screen transition
        application().gotoHeartRatePageScreenNoTransition();
    }
}
